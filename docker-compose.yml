version: '2'

services:
  nginx:
    restart: always
    image: demostf/demos.tf
    container_name: nginx
    ports:
      - "${PORT}:80"
    volumes:
      - "certs:/etc/nginx/certs:ro"
      - "./api.tmpl:/etc/nginx/conf.d/api.tmpl"
      - "./static.tmpl:/etc/nginx/conf.d/static.tmpl"
      - "./sync.tmpl:/etc/nginx/conf.d/sync.tmpl"
      - "${DEMO_ROOT}:/demos"
    environment:
     - HOST=${HOST}
     - UPLOAD_FASTCGI=api:9000
     - UPLOAD_SCRIPT=/app/src/public/upload.php
    networks:
      - proxy-tier
    depends_on:
      - api
  api:
    restart: always
    image: demostf/api
    container_name: api
    environment:
      - BASE_HOST=${HOST}
      - DEMO_ROOT=/demos
      - DEMO_HOST=static.$HOST
      - DB_TYPE=pgsql
      - DB_HOST=db
      - DB_DATABASE=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - PARSER_URL=http://parser/parse
      - APP_ROOT=https://api.$HOST
      - EDIT_SECRET=${EDIT_SECRET}
      - UPLOAD_KEY=${UPLOAD_KEY}
    volumes:
      - "${DEMO_ROOT}:/demos"
    networks:
      - proxy-tier
      - db-tier
      - parser-tier

  parser:
    restart: always
    image: demostf/demoserver
    container_name: parser
    mem_limit: 256m
    restart: unless-stopped
    networks:
      - parser-tier
  
  sync:
    restart: always
    image: demostf/sync-rs
    container_name: sync
    mem_limit: 128m
    restart: unless-stopped
    networks:
      - proxy-tier

  db:
    restart: always
    image: demostf/db
    container_name: db
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - "./db_data:/var/lib/postgresql/data"
    networks:
      - db-tier

networks:
  proxy-tier:
  db-tier:
  parser-tier:

volumes:
  certs:
